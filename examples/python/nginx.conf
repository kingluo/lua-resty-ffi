daemon off;
error_log /dev/stderr info;
worker_processes auto;
env LD_LIBRARY_PATH;
env PYTHONPATH;

events {}

http {
    server {
        listen 20000;

        location /gc {
            content_by_lua_block {
                collectgarbage()
                ngx.say("ok")
            }
        }

        location /echo {
            content_by_lua_block {
                require("resty_ffi")
                local demo = ngx.load_ffi("resty_ffi_python", "ffi.echo?,init",
                    {is_global = true, unpin = true})
                local ok, res = demo:echo("hello")
                assert(ok)
                assert(res == "hello")

                demo:__unload()
                ok, res = demo:echo("foobar")
                assert(not ok)
                ngx.log(ngx.ERR, res)

                ngx.say("ok")
            }
        }

        location /kafka {
            content_by_lua_block {
                require("resty_ffi")
                local opts = {is_global = true}
                local demo = ngx.load_ffi("resty_ffi_python",
                    [[ffi.kafka,init,{"servers":"localhost:9092", "topic":"foobar", "group_id": "foobar"}]], opts)
                local ok, res
                ok, res = demo:produce([[{"type":"produce", "msg":"hello"}]])
                assert(ok)
                ok, res = demo:produce([[{"type":"produce", "msg":"world"}]])
                assert(ok)
                local ok, res = demo:consume([[{"type":"consume"}]])
                assert(ok)
                ngx.say(res)
                local ok, res = demo:consume([[{"type":"consume"}]])
                assert(ok)
                ngx.say(res)
            }
        }
    }
}
